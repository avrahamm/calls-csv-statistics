services:
  # PHP service with Symfony
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        PHP_PORT: ${PHP_PORT}
    container_name: ${PHP_CONTAINER_NAME}
    working_dir: /app
    user: appuser
    volumes:
      - ./:/app
    depends_on:
      database:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DOCKER_DATABASE_URL}
      PHP_PORT: ${PHP_PORT}
    healthcheck:
      test: ["CMD", "php", "-r", "if (@fsockopen('localhost', getenv('PHP_PORT'))) { exit(0); } else { exit(1); }"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Queue worker service
  worker:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        PHP_PORT: ${PHP_PORT}
    container_name: ${WORKER_CONTAINER_NAME}
    working_dir: /app
    user: appuser
    restart: unless-stopped
    command: ["bin/console", "messenger:consume", "async", "--time-limit=${WORKER_TIME_LIMIT}", "--memory-limit=${WORKER_MEMORY_LIMIT}"]
    volumes:
      - ./:/app
    depends_on:
      database:
        condition: service_healthy
      php:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DOCKER_DATABASE_URL}
      PHP_PORT: ${PHP_PORT}

  # Web server (Nginx)
  nginx:
    image: nginx:alpine
    container_name: ${NGINX_CONTAINER_NAME}
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - .:/app
      - ./docker/nginx/default.conf.template:/etc/nginx/conf.d/default.conf.template
    environment:
      - PHP_CONTAINER_NAME=${PHP_CONTAINER_NAME}
      - PHP_PORT=${PHP_PORT}
    command: /bin/sh -c "envsubst '$$PHP_CONTAINER_NAME $$PHP_PORT' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    depends_on:
      php:
        condition: service_healthy

  # MySQL database
  database:
    image: mysql:8.0
    container_name: ${DATABASE_CONTAINER_NAME}
    ports:
      - "${DATABASE_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Node service for React development
  node:
    image: node:latest
    container_name: ${NODE_CONTAINER_NAME}
    volumes:
      - .:/app
    working_dir: /app
    command: >
      sh -c "echo 'Node.js container for React development is ready'"

volumes:
  db-data:
