services:
  # PHP service with Symfony
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: ${PHP_CONTAINER_NAME}
    working_dir: /app
    user: appuser
    command: >
      sh -c "sudo chown -R appuser:appuser /app && \
       chmod +x /app/setup.sh && \
       /app/setup.sh && \
       php-fpm"
    volumes:
      - ./:/app
    depends_on:
      - database
    environment:
      DATABASE_URL: ${DOCKER_DATABASE_URL}

  # Queue worker service
  worker:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: ${WORKER_CONTAINER_NAME}
    working_dir: /app
    user: appuser
    restart: unless-stopped
    command: >
      sh -c "sudo chown -R appuser:appuser /app && \
       bin/console messenger:consume async --time-limit=${WORKER_TIME_LIMIT} --memory-limit=${WORKER_MEMORY_LIMIT}"
    volumes:
      - ./:/app
    depends_on:
      - database
    environment:
      DATABASE_URL: ${DOCKER_DATABASE_URL}

  # Web server (Nginx)
  nginx:
    image: nginx:alpine
    container_name: ${NGINX_CONTAINER_NAME}
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - .:/app
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php

  # MySQL database
  database:
    image: mysql:8.0
    container_name: ${DATABASE_CONTAINER_NAME}
    ports:
      - "${DATABASE_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql

  # Node service for React development
  node:
    image: node:latest
    container_name: ${NODE_CONTAINER_NAME}
    volumes:
      - .:/app
    working_dir: /app
    command: >
      sh -c "echo 'Node.js container for React development is ready'"

volumes:
  db-data:
